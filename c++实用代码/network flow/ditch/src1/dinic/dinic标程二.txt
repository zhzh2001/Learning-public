{×¢ÊÍ£º
c ²ÐÁ¿ÍøÂç LC²ã´ÎÍ¼
M ²ã´Î±êºÅ
¸´ÖÆÄÚÈÝµ½¼ôÌù°å´úÂë:}
program maxflow_dinic;
const
  maxn=200;
type
  graph=array[1..maxn,1..maxn]of longint;
var
  h,maxflow,top,s,t,n:longint;
  od,d,last,p,m:array[1..maxn]of longint;
  lc,c:graph;
  procedure initialize;
  var
    i,x,y,z:longint;
  begin
    maxflow:=0;
    assign(input,'ditch.in');reset(input);
    readln(h,n);
    s:=1;t:=n;
    fillchar(c,sizeof(c),0);
    for i:=1 to h do
    begin
      readln(x,y,z);
      inc(c[x,y],z);
    end;
    close(input);
  end;
  procedure bfs;
  var
    r,x,head,tail,i:longint;
  begin
    fillchar(od,sizeof(od),0);
    fillchar(m,sizeof(m),255);
    fillchar(lc,sizeof(lc),0);
    head:=1;tail:=1;d[1]:=s;m[1]:=0;
    repeat
      x:=d[head];
      for i:=1 to n do
      begin
        r:=c[x,i];
        if r>0 then
          if (m=-1)or(m=m[x]+1) then
          begin if m=-1 then begin inc(tail);d[tail]:=i;end;
                inc(od[x]);m:=m[x]+1;lc[x,i]:=r;end
      end;
      inc(head);
    until head>tail;
  end;
  procedure dfs;
  var
    r,u,i,j:longint;
  begin
    top:=1;p[1]:=s;
    fillchar(last,sizeof(last),0);
    while top<>0 do
    begin
      u:=p[top];
      if u<>t then
      begin
        if od>0 then
        begin
          for i:=last+1 to n do
            if (lc[u,i]>0) then
            begin
              inc(top);p[top]:=i;
              last:=i;
              dec(od);
              break;
            end;
        end else begin dec(top);u:=p[top];end;
      end
      else
      begin
        r:=maxlongint;
        for i:=1 to top-1 do if lc[p,p[i+1]]<r
          then r:=lc[p,p[i+1]];
        for i:=1 to top-1 do
        begin
          c[p,p[i+1]]:=c[p,p[i+1]]-r;
          c[p[i+1],p]:=c[p[i+1],p]+r;
          lc[p,p[i+1]]:=lc[p,p[i+1]]-r;
          lc[p[i+1],p]:=lc[p[i+1],p]+r;
        end;
        i:=1;while lc[p,p[i+1]]>0 do inc(i);
        top:=i-1;
        maxflow:=maxflow+r;
      end;
    end;
  end;
  procedure print;
  begin
    assign(output,'ditch.out');rewrite(output);
    writeln(maxflow);
    close(output);
  end;
begin
  initialize;;
  repeat
    bfs;if m[t]=-1 then break;
    dfs;
  until false;
  print;
end.
