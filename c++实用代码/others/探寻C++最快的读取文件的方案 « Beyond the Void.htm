<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0049)http://www.byvoid.com/blog/fast-readfile/zh-hans/ -->
<html xmlns="http://www.w3.org/1999/xhtml"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="keywords" content="C++, cin, C语言, gcc, iostream, Linux, mingw, Pascal, scanf, VC, 效率, 流, 读入, 输入, 速度, ">
<meta name="description" content="在竞赛中，遇到大数据时，往往读文件成了程序运行速度的瓶颈，需要更快的读取方式。相信几乎所有的C++学习者都在cin机器缓慢的速度上栽过跟头，于是从此以后发�">

<title>探寻C++最快的读取文件的方案 «  Beyond the Void</title>

<meta name="generator" content="WordPress 3.3.2"> <!-- leave this for stats -->
<link rel="shortcut icon" href="http://www.byvoid.com/favicon.ico">
<link rel="stylesheet" href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/style.css" type="text/css" media="all">
<link rel="stylesheet" href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/print.css" type="text/css" media="print">
<link rel="alternate" type="application/rss+xml" title="Beyond the Void RSS Feed" href="http://www.byvoid.com/blog/feed">
<link rel="pingback" href="http://www.byvoid.com/blog/xmlrpc.php">
<script type="text/javascript" src="https://apis.google.com/js/plusone.js">
  {lang: 'zh-TW'}
</script>
<link rel="alternate" type="application/rss+xml" title="Beyond the Void » 探寻C++最快的读取文件的方案 评论 Feed" href="http://www.byvoid.com/blog/fast-readfile/feed/zh-hans/">
<link rel="stylesheet" id="codebox-css" href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/codebox.css" type="text/css" media="screen">
<link rel="stylesheet" id="wp-pagenavi-css" href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/pagenavi-css.css" type="text/css" media="all">
<script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/jquery.js"></script>
<script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/codebox.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.byvoid.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.byvoid.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="WC2010 排序机" href="http://www.byvoid.com/blog/wc2010-sort/zh-hans/">
<link rel="next" title="达拉然酒店——“英雄光临”与“下流畜生”" href="http://www.byvoid.com/blog/dalaran-tavern/zh-hans/">
<meta name="generator" content="WordPress 3.3.2">
<link rel="shortlink" href="http://www.byvoid.com/blog/?p=1830">

<!-- Start Of Script Generated By WP-PostViews 1.60 -->
<script type="text/javascript">
/* <![CDATA[ */
jQuery.ajax({type:'GET',url:'http://www.byvoid.com/blog/wp-content/plugins/wp-postviews/wp-postviews.php',data:'postviews_id=1830',cache:false});/* ]]> */
</script>
<!-- End Of Script Generated By WP-PostViews 1.60 -->
<style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>

<!-- WP Chinese Conversion Plugin Version 1.1.10 --><script type="text/javascript">
//<![CDATA[
var wpcc_target_lang="zh-hans";var wpcc_noconversion_url="http://www.byvoid.com/blog/fast-readfile/";var wpcc_langs_urls=new Array();wpcc_langs_urls["zh-hans"]="http://www.byvoid.com/blog/fast-readfile/zh-hans/";wpcc_langs_urls["zh-hant"]="http://www.byvoid.com/blog/fast-readfile/zh-hant/";
//]]>
</script><script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/search-variant.js"></script><meta name="robots" content="noindex,follow"><link rel="canonical" href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/探寻C++最快的读取文件的方案 « Beyond the Void.htm">
<!-- wp thread comment 1.4.9.4.002 -->
<style type="text/css" media="screen">
.editComment, .editableComment, .textComment{
	display: inline;
}
.comment-childs{
	border: 0px solid #999;
	margin: 5px 2px 2px 4px;
	padding: 4px 2px 2px 4px;
	background-color: #F1FEDB;
}
.chalt{
	background-color: #FFFFCC;
}
#newcomment{
	border:1px dashed #777;width:90%;
}
#newcommentsubmit{
	color:red;
}
.adminreplycomment{
	border:1px dashed #777;
	width:99%;
	margin:4px;
	padding:4px;
}
.mvccls{
	color: #999;
}
			
</style>
</head>
<body>
<table border="0" width="100%" cellpadding="0" cellspacing="0">
<tbody><tr>
	<td id="asd">&nbsp;</td>
	<td id="qw">
<div id="page">
  <div id="header">
    <div id="headerimg">
	  <h1><a href="http://www.byvoid.com/blog/">Beyond the Void</a></h1>
	  <div class="description">积羽沉舟 羣轻折轴</div>
	</div>
  </div>
  <!--/header -->
<div id="con_pad">
  <div id="content">
	<table border="0" width="100%">
		<tbody><tr><td>
		<div style="float: left;">« <a href="http://www.byvoid.com/blog/wc2010-sort/zh-hans/" rel="prev">WC2010 排序机</a></div>
		<div style="float: right;"><a href="http://www.byvoid.com/blog/dalaran-tavern/zh-hans/" rel="next">达拉然酒店——“英雄光临”与“下流畜生”</a> »</div>
		</td></tr>
	</tbody></table>
  
    <div class="post" id="post-1830">
    
	  <div class="post-date"><span class="post-month">三</span> <span class="post-day">17</span></div>

	  <div class="post-title">
<div style="float: right;">
<g:plusone count="false"></g:plusone>
</div>
	  <h2><a href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/探寻C++最快的读取文件的方案 « Beyond the Void.htm" rel="bookmark" title="Permanent Link to 探寻C++最快的读取文件的方案">探寻C++最快的读取文件的方案</a></h2>

		<span class="post-cat"><a href="http://www.byvoid.com/blog/cate/technology/zh-hans/" title="查看 计算机技术 中的全部文章" rel="category tag">计算机技术</a></span> <span class="mini-add-comment"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#respond">Add comments</a><span style="color: #000000">8,255 views</span></span>

	  </div>

	  <div class="entry">

		<p>在竞赛中，遇到大数据时，往往读文件成了程序运行速度的瓶颈，需要更快的读取方式。相信几乎所有的C++学习者都在cin机器缓慢的速度上栽过跟头，于是从此以后发誓不用cin读数据。还有人说Pascal的read语句的速度是C/C++中scanf比不上的，C++选手只能干着急。难道C++真的低Pascal一等吗？答案是不言而喻的。一个进阶的方法是把数据一下子读进来，然后再转化字符串，这种方法传说中很不错，但具体如何从没试过，因此今天就索性把能想到的所有的读数据的方式都测试了一边，结果是惊人的。<br>
<span id="more-1830"></span><br>
竞赛中读数据的情况最多的莫过于读一大堆整数了，于是我写了一个程序，生成一千万个随机数到data.txt中，一共55MB。然后我写了个程序主干计算运行时间，代码如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code1&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18301"><td class="line_numbers"><pre>1
2
3
4
5
6
7
</pre></td><td class="code" id="p1830code1"><pre class="cpp" style="font-family:monospace;"><span style="color: #339900;">#include &lt;ctime&gt;</span>
<span style="color: #0000ff;">int</span> main<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000ff;">int</span> start <span style="color: #000080;">=</span> <span style="color: #0000dd;">clock</span><span style="color: #008000;">(</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #666666;">//DO SOMETHING</span>
	<span style="color: #0000dd;">printf</span><span style="color: #008000;">(</span><span style="color: #FF0000;">"%.3lf<span style="color: #000099; font-weight: bold;">\n</span>"</span>,<span style="color: #0000ff;">double</span><span style="color: #008000;">(</span><span style="color: #0000dd;">clock</span><span style="color: #008000;">(</span><span style="color: #008000;">)</span><span style="color: #000040;">-</span>start<span style="color: #008000;">)</span><span style="color: #000040;">/</span><span style="color: #0000ff;">CLOCKS_PER_SEC</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>最简单的方法就算写一个循环scanf了，代码如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code2&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18302"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code" id="p1830code2"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXN <span style="color: #000080;">=</span> <span style="color: #0000dd;">10000000</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">int</span> numbers<span style="color: #008000;">[</span>MAXN<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">void</span> scanf_read<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000dd;">freopen</span><span style="color: #008000;">(</span><span style="color: #FF0000;">"data.txt"</span>,<span style="color: #FF0000;">"r"</span>,<span style="color: #0000ff;">stdin</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">for</span> <span style="color: #008000;">(</span><span style="color: #0000ff;">int</span> i<span style="color: #000080;">=</span><span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>i<span style="color: #000080;">&lt;</span>MAXN<span style="color: #008080;">;</span>i<span style="color: #000040;">++</span><span style="color: #008000;">)</span>
		<span style="color: #0000dd;">scanf</span><span style="color: #008000;">(</span><span style="color: #FF0000;">"%d"</span>,<span style="color: #000040;">&amp;</span>numbers<span style="color: #008000;">[</span>i<span style="color: #008000;">]</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>可是效率如何呢？在我的电脑Linux平台上测试结果为2.01秒。接下来是cin，代码如下</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code3&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18303"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code" id="p1830code3"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXN <span style="color: #000080;">=</span> <span style="color: #0000dd;">10000000</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">int</span> numbers<span style="color: #008000;">[</span>MAXN<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">void</span> cin_read<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000dd;">freopen</span><span style="color: #008000;">(</span><span style="color: #FF0000;">"data.txt"</span>,<span style="color: #FF0000;">"r"</span>,<span style="color: #0000ff;">stdin</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">for</span> <span style="color: #008000;">(</span><span style="color: #0000ff;">int</span> i<span style="color: #000080;">=</span><span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>i<span style="color: #000080;">&lt;</span>MAXN<span style="color: #008080;">;</span>i<span style="color: #000040;">++</span><span style="color: #008000;">)</span>
		std<span style="color: #008080;">::</span><span style="color: #0000dd;">cin</span> <span style="color: #000080;">&gt;&gt;</span> numbers<span style="color: #008000;">[</span>i<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>出乎我的意料，cin仅仅用了6.38秒，比我想象的要快。cin慢是有原因的，其实默认的时候，cin与stdin总是保持同步的，也就是说这两种方法可以混用，而不必担心文件指针混乱，同时cout和stdout也一样，两者混用不会输出顺序错乱。正因为这个兼容性的特性，导致cin有许多额外的开销，如何禁用这个特性呢？只需一个语句std::ios::sync_with_stdio(false);，这样就可以取消cin于stdin的同步了。程序如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code4&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18304"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code" id="p1830code4"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXN <span style="color: #000080;">=</span> <span style="color: #0000dd;">10000000</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">int</span> numbers<span style="color: #008000;">[</span>MAXN<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">void</span> cin_read_nosync<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000dd;">freopen</span><span style="color: #008000;">(</span><span style="color: #FF0000;">"data.txt"</span>,<span style="color: #FF0000;">"r"</span>,<span style="color: #0000ff;">stdin</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	std<span style="color: #008080;">::</span><span style="color: #007788;">ios</span><span style="color: #008080;">::</span><span style="color: #007788;">sync_with_stdio</span><span style="color: #008000;">(</span><span style="color: #0000ff;">false</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">for</span> <span style="color: #008000;">(</span><span style="color: #0000ff;">int</span> i<span style="color: #000080;">=</span><span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>i<span style="color: #000080;">&lt;</span>MAXN<span style="color: #008080;">;</span>i<span style="color: #000040;">++</span><span style="color: #008000;">)</span>
		std<span style="color: #008080;">::</span><span style="color: #0000dd;">cin</span> <span style="color: #000080;">&gt;&gt;</span> numbers<span style="color: #008000;">[</span>i<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>取消同步后效率究竟如何？经测试运行时间锐减到了2.05秒，<strong>与scanf效率相差无几了</strong>！有了这个以后可以放心使用cin和cout了。</p>
<p>接下来让我们测试一下读入整个文件再处理的方法，首先要写一个字符串转化为数组的函数，代码如下</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code5&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18305"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code" id="p1830code5"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXS <span style="color: #000080;">=</span> <span style="color: #0000dd;">60</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">char</span> buf<span style="color: #008000;">[</span>MAXS<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">void</span> analyse<span style="color: #008000;">(</span><span style="color: #0000ff;">char</span> <span style="color: #000040;">*</span>buf,<span style="color: #0000ff;">int</span> len <span style="color: #000080;">=</span> MAXS<span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000ff;">int</span> i<span style="color: #008080;">;</span>
	numbers<span style="color: #008000;">[</span>i<span style="color: #000080;">=</span><span style="color: #0000dd;">0</span><span style="color: #008000;">]</span><span style="color: #000080;">=</span><span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">for</span> <span style="color: #008000;">(</span><span style="color: #0000ff;">char</span> <span style="color: #000040;">*</span>p<span style="color: #000080;">=</span>buf<span style="color: #008080;">;</span><span style="color: #000040;">*</span>p <span style="color: #000040;">&amp;&amp;</span> p<span style="color: #000040;">-</span>buf<span style="color: #000080;">&lt;</span>len<span style="color: #008080;">;</span>p<span style="color: #000040;">++</span><span style="color: #008000;">)</span>
		<span style="color: #0000ff;">if</span> <span style="color: #008000;">(</span><span style="color: #000040;">*</span>p <span style="color: #000080;">==</span> <span style="color: #FF0000;">' '</span><span style="color: #008000;">)</span>
			numbers<span style="color: #008000;">[</span><span style="color: #000040;">++</span>i<span style="color: #008000;">]</span><span style="color: #000080;">=</span><span style="color: #0000dd;">0</span><span style="color: #008080;">;</span>
		<span style="color: #0000ff;">else</span>
			numbers<span style="color: #008000;">[</span>i<span style="color: #008000;">]</span> <span style="color: #000080;">=</span> numbers<span style="color: #008000;">[</span>i<span style="color: #008000;">]</span> <span style="color: #000040;">*</span> <span style="color: #0000dd;">10</span> <span style="color: #000040;">+</span> <span style="color: #000040;">*</span>p <span style="color: #000040;">-</span> <span style="color: #FF0000;">'0'</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>把整个文件读入一个字符串最常用的方法是用fread，代码如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code6&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18306"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code" id="p1830code6"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXN <span style="color: #000080;">=</span> <span style="color: #0000dd;">10000000</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXS <span style="color: #000080;">=</span> <span style="color: #0000dd;">60</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">int</span> numbers<span style="color: #008000;">[</span>MAXN<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">char</span> buf<span style="color: #008000;">[</span>MAXS<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">void</span> fread_analyse<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000dd;">freopen</span><span style="color: #008000;">(</span><span style="color: #FF0000;">"data.txt"</span>,<span style="color: #FF0000;">"rb"</span>,<span style="color: #0000ff;">stdin</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">int</span> len <span style="color: #000080;">=</span> <span style="color: #0000dd;">fread</span><span style="color: #008000;">(</span>buf,<span style="color: #0000dd;">1</span>,MAXS,<span style="color: #0000ff;">stdin</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	buf<span style="color: #008000;">[</span>len<span style="color: #008000;">]</span> <span style="color: #000080;">=</span> <span style="color: #FF0000;">'<span style="color: #006699; font-weight: bold;">\0</span>'</span><span style="color: #008080;">;</span>
	analyse<span style="color: #008000;">(</span>buf,len<span style="color: #008000;">)</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>上述代码有着惊人的效率，经测试读取这10000000个数只用了0.29秒，效率提高了几乎10倍！掌握着种方法简直无敌了，不过，我记得fread是封装过的read，如果直接使用read，是不是更快呢？代码如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code7&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18307"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code" id="p1830code7"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXN <span style="color: #000080;">=</span> <span style="color: #0000dd;">10000000</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXS <span style="color: #000080;">=</span> <span style="color: #0000dd;">60</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">int</span> numbers<span style="color: #008000;">[</span>MAXN<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">char</span> buf<span style="color: #008000;">[</span>MAXS<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">void</span> read_analyse<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000ff;">int</span> fd <span style="color: #000080;">=</span> open<span style="color: #008000;">(</span><span style="color: #FF0000;">"data.txt"</span>,O_RDONLY<span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">int</span> len <span style="color: #000080;">=</span> read<span style="color: #008000;">(</span>fd,buf,MAXS<span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	buf<span style="color: #008000;">[</span>len<span style="color: #008000;">]</span> <span style="color: #000080;">=</span> <span style="color: #FF0000;">'<span style="color: #006699; font-weight: bold;">\0</span>'</span><span style="color: #008080;">;</span>
	analyse<span style="color: #008000;">(</span>buf,len<span style="color: #008000;">)</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>测试发现运行时间仍然是0.29秒，可见read不具备特殊的优势。到此已经结束了吗？不，我可以调用Linux的底层函数mmap，这个函数的功能是将文件映射到内存，是所有读文件方法都要封装的基础方法，直接使用mmap会怎样呢？代码如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code8&#39;); return false;">View Code</a> CPP</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18308"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code" id="p1830code8"><pre class="cpp" style="font-family:monospace;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXN <span style="color: #000080;">=</span> <span style="color: #0000dd;">10000000</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> MAXS <span style="color: #000080;">=</span> <span style="color: #0000dd;">60</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #000040;">*</span><span style="color: #0000dd;">1024</span><span style="color: #008080;">;</span>
&nbsp;
<span style="color: #0000ff;">int</span> numbers<span style="color: #008000;">[</span>MAXN<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">char</span> buf<span style="color: #008000;">[</span>MAXS<span style="color: #008000;">]</span><span style="color: #008080;">;</span>
<span style="color: #0000ff;">void</span> mmap_analyse<span style="color: #008000;">(</span><span style="color: #008000;">)</span>
<span style="color: #008000;">{</span>
	<span style="color: #0000ff;">int</span> fd <span style="color: #000080;">=</span> open<span style="color: #008000;">(</span><span style="color: #FF0000;">"data.txt"</span>,O_RDONLY<span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">int</span> len <span style="color: #000080;">=</span> lseek<span style="color: #008000;">(</span>fd,<span style="color: #0000dd;">0</span>,<span style="color: #0000ff;">SEEK_END</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>
	<span style="color: #0000ff;">char</span> <span style="color: #000040;">*</span>mbuf <span style="color: #000080;">=</span> <span style="color: #008000;">(</span><span style="color: #0000ff;">char</span> <span style="color: #000040;">*</span><span style="color: #008000;">)</span> mmap<span style="color: #008000;">(</span><span style="color: #0000ff;">NULL</span>,len,PROT_READ,MAP_PRIVATE,fd,<span style="color: #0000dd;">0</span><span style="color: #008000;">)</span><span style="color: #008080;">;</span>	
	analyse<span style="color: #008000;">(</span>mbuf,len<span style="color: #008000;">)</span><span style="color: #008080;">;</span>
<span style="color: #008000;">}</span></pre></td></tr></tbody></table></div>

<p>经测试，运行时间缩短到了0.25秒，效率继续提高了14%。到此为止我已经没有更好的方法继续提高读文件的速度了。回头测一下Pascal的速度如何？结果<strong>令人大跌眼镜</strong>，居然运行了2.16秒之多。程序如下：</p>

<div class="wp_codebox_msgheader"><span class="right"><sup><a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples" target="_blank" title="WP-CodeBox HowTo?"><span style="color: #99cc00">?</span></a></sup></span><span class="left"><a href="javascript:;" onclick="javascript:showCodeTxt(&#39;p1830code9&#39;); return false;">View Code</a> PASCAL</span><div class="codebox_clear"></div></div><div class="wp_codebox"><table><tbody><tr id="p18309"><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code" id="p1830code9"><pre class="pascal" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">const</span>
	MAXN <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10000000</span>;
<span style="color: #000000; font-weight: bold;">var</span>
	numbers <span style="color: #339933;">:</span><span style="color: #000066; font-weight: bold;">array</span><span style="color: #009900;">[</span><span style="color: #cc66cc;">0</span>..<span style="color: #0066ee;">MAXN</span><span style="color: #009900;">]</span> <span style="color: #000000; font-weight: bold;">of</span> <span style="color: #000066; font-weight: bold;">longint</span>;
	i <span style="color: #339933;">:</span><span style="color: #000066; font-weight: bold;">longint</span>;
<span style="color: #000000; font-weight: bold;">begin</span>
	assign<span style="color: #009900;">(</span>input<span style="color: #339933;">,</span><span style="color: #ff0000;">'data.txt'</span><span style="color: #009900;">)</span>;
	reset<span style="color: #009900;">(</span>input<span style="color: #009900;">)</span>;
	<span style="color: #000000; font-weight: bold;">for</span> i<span style="color: #339933;">:=</span><span style="color: #cc66cc;">0</span> <span style="color: #000000; font-weight: bold;">to</span> MAXN <span style="color: #000000; font-weight: bold;">do</span>
		<span style="color: #000066;">read</span><span style="color: #009900;">(</span>numbers<span style="color: #009900;">[</span>i<span style="color: #009900;">]</span><span style="color: #009900;">)</span>;
<span style="color: #000000; font-weight: bold;">end</span>.</pre></td></tr></tbody></table></div>

<p>为确保准确性，我又换到Windows平台上测试了一下。结果如下表：</p>
<table border="1">
<tbody>
<tr>
<td>方法/平台/时间(秒)</td>
<td>Linux gcc</td>
<td>Windows mingw</td>
<td>Windows VC2008</td>
</tr>
<tr>
<td>scanf</td>
<td>2.010</td>
<td>3.704</td>
<td>3.425</td>
</tr>
<tr>
<td>cin</td>
<td>6.380</td>
<td>64.003</td>
<td>19.208</td>
</tr>
<tr>
<td>cin取消同步</td>
<td>2.050</td>
<td>6.004</td>
<td>19.616</td>
</tr>
<tr>
<td>fread</td>
<td>0.290</td>
<td>0.241</td>
<td>0.304</td>
</tr>
<tr>
<td>read</td>
<td>0.290</td>
<td>0.398</td>
<td>不支持</td>
</tr>
<tr>
<td>mmap</td>
<td>0.250</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>Pascal read</td>
<td>2.160</td>
<td>4.668</td>
<td></td>
</tr>
</tbody>
</table>
<p>从上面可以看出几个问题</p>
<ol>
<li>Linux平台上运行程序普遍比Windows上快。</li>
<li>Windows下VC编译的程序一般运行比MINGW（MINimal Gcc for Windows）快。</li>
<li>VC对cin取消同步与否<strong>不敏感</strong>，前后效率相同。反过来MINGW则<strong>非常敏感</strong>，前后效率相差8倍。</li>
<li>read本是linux系统函数，MINGW可能采用了某种模拟方式，read比fread更慢。</li>
<li>Pascal程序运行速度实在令人不敢恭维。</li>
</ol>
<p>希望此文能对大家有所启发，欢迎与我继续讨论。</p>
<p><a href="http://www.byvoid.com/">BYVoid原创 转载请注明</a></p>
<h4 class="related_post_title">相关日志</h4><ul class="related_post"><li><a href="http://www.byvoid.com/blog/vakuum-dev-note-02/zh-hans/" title="Vakuum开发笔记02 核心与安全问题">Vakuum开发笔记02 核心与安全问题</a></li><li><a href="http://www.byvoid.com/blog/linux-cprogram-syscall/zh-hans/" title="Linux下C程序启动时的系统调用">Linux下C程序启动时的系统调用</a></li><li><a href="http://www.byvoid.com/blog/linux-c-1/zh-hans/" title="Linux C语言编程学习笔记 (1)进程控制入门">Linux C语言编程学习笔记 (1)进程控制入门</a></li><li><a href="http://www.byvoid.com/blog/pascaler-ignorance/zh-hans/" title="Pascaler:别拿自己的无知当个性">Pascaler:别拿自己的无知当个性</a></li><li><a href="http://www.byvoid.com/blog/cpp-fstream/zh-hans/" title="C++中fstream的用法">C++中fstream的用法</a></li><li><a href="http://www.byvoid.com/blog/thinking-in-delphi/zh-hans/" title="Thinking in Delphi：语言的变革">Thinking in Delphi：语言的变革</a></li><li><a href="http://www.byvoid.com/blog/yum-apt-cmp/zh-hans/" title="yum与apt命令比较">yum与apt命令比较</a></li><li><a href="http://www.byvoid.com/blog/linux-kernel-and-glibc/zh-hans/" title="Linux内核与glibc">Linux内核与glibc</a></li></ul>
		标签：<a href="http://www.byvoid.com/blog/tag/c/zh-hans/" rel="tag">C++</a>, <a href="http://www.byvoid.com/blog/tag/cin/zh-hans/" rel="tag">cin</a>, <a href="http://www.byvoid.com/blog/tag/c%e8%af%ad%e8%a8%80/zh-hans/" rel="tag">C语言</a>, <a href="http://www.byvoid.com/blog/tag/gcc/zh-hans/" rel="tag">gcc</a>, <a href="http://www.byvoid.com/blog/tag/iostream/zh-hans/" rel="tag">iostream</a>, <a href="http://www.byvoid.com/blog/tag/linux/zh-hans/" rel="tag">Linux</a>, <a href="http://www.byvoid.com/blog/tag/mingw/zh-hans/" rel="tag">mingw</a>, <a href="http://www.byvoid.com/blog/tag/pascal/zh-hans/" rel="tag">Pascal</a>, <a href="http://www.byvoid.com/blog/tag/scanf/zh-hans/" rel="tag">scanf</a>, <a href="http://www.byvoid.com/blog/tag/vc/zh-hans/" rel="tag">VC</a>, <a href="http://www.byvoid.com/blog/tag/%e6%95%88%e7%8e%87/zh-hans/" rel="tag">效率</a>, <a href="http://www.byvoid.com/blog/tag/%e6%b5%81/zh-hans/" rel="tag">流</a>, <a href="http://www.byvoid.com/blog/tag/%e8%af%bb%e5%85%a5/zh-hans/" rel="tag">读入</a>, <a href="http://www.byvoid.com/blog/tag/%e8%be%93%e5%85%a5/zh-hans/" rel="tag">输入</a>, <a href="http://www.byvoid.com/blog/tag/%e9%80%9f%e5%ba%a6/zh-hans/" rel="tag">速度</a><br>

				

		
<br><br>

	  </div>		

		
<!-- You can start editing here. -->

	<h3 id="comments">30 Responses to “探寻C++最快的读取文件的方案”</h3> 

	<ol class="commentlist">

	
		<li class="alt" id="comment-3386">
			<cite>cgy4ever</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/63d9a5edde7c1ffd869fb10214e54dd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 4.0.266.0" style="border:0px;vertical-align:middle;" alt="Google Chrome 4.0.266.0"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-3.png" title="Windows Vista" style="border:0px;vertical-align:middle;" alt="Windows Vista">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-3386" title="">三月 17th, 2010 at 16:05:46</a> </small>

			<p>很受用,学习了.<br>
顺便想知道一下,用fstream打开文件的话,速度是不是和freopen一样的?</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,3386,1,&#39;cgy4ever&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-3388">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6" style="border:0px;vertical-align:middle;" alt="Firefox 3.6"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7"><small class="commentmetadata">三月 17th, 2010 at 16:35:12</small>
</p>
<p>fstream 和 iostream 属于同一基类，因此和cin，cout速度是一样的，freopen只是一个重定向，和fopen一样</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,3388,2,&#39;BYVoid&#39;);">回复</a>]</p><div class="comment-childs" id="comment-3690">
<p>
<cite><a href="http://robotshell.org/" rel="external nofollow" class="url">Robot</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/6040c5ab02ff9d8499f9b22bceb2b6ec" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.5.9" style="border:0px;vertical-align:middle;" alt="Firefox 3.5.9"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-1.png" title="Ubuntu 9.10" style="border:0px;vertical-align:middle;" alt="Ubuntu 9.10"><small class="commentmetadata">四月 13th, 2010 at 16:39:49</small>
</p>
<p>我测试过（LINUX下）新建两个fstream类（e.g. ifstream fin;ofstream fout;）比iostream+freopen更快。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,3690,3,&#39;Robot&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-4357">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.3" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.3"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.04" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.04"><small class="commentmetadata">六月 5th, 2010 at 18:32:28</small>
</p>
<p>std::ios::sync_with_stdio(false);用了吗</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,4357,4,&#39;BYVoid&#39;);">回复</a>]</p><div class="comment-childs" id="comment-4362">
<p>
<cite><a href="http://robotshell.org/" rel="external nofollow" class="url">Robot</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/6040c5ab02ff9d8499f9b22bceb2b6ec" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.3" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.3"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.04" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.04"><small class="commentmetadata">六月 6th, 2010 at 10:21:41</small>
</p>
<p>没用呢…就是因为这样所以才有很大差距的吧。比赛时能用这个？</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,4362,5,&#39;Robot&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-4364">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.3" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.3"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.04" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.04"><small class="commentmetadata">六月 6th, 2010 at 16:05:29</small>
</p>
<p>当然可以用。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,4364,6,&#39;BYVoid&#39;);">回复</a>]</p><div class="comment-childs" id="comment-4381">
<p>
<cite><a href="http://robotshell.org/" rel="external nofollow" class="url">Robot</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/6040c5ab02ff9d8499f9b22bceb2b6ec" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.3" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.3"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.04" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.04"><small class="commentmetadata">六月 8th, 2010 at 11:14:58</small>
</p>
<p>恩，我现在认识到C是不可能比PASCAL慢的，我说的是C。因为C支持底层操作，mmap就是一个很好的例子。C/C++固然也有很多封装好的高级I/O方式，不过你仍然有使用底层方式的自由，这样速度自然慢不了。而PASCAL仅仅只提供了封装好的。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,4381,7,&#39;Robot&#39;);">回复</a>]</p>
</div>
</div>
</div>
</div>
</div><div class="comment-childs" id="comment-24128">
<p>
<cite>SonicMisora</cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/6da6353b3bd972c42975d68794f457bd" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 13.0.782.220" style="border:0px;vertical-align:middle;" alt="Google Chrome 13.0.782.220"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7"><small class="commentmetadata">三月 28th, 2012 at 21:53:53</small>
</p>
<p>肯定是不一样的。<br>
只是在标准输入输出流上cin和cout与stdin和stdout同步，fstream又不用，即是基类相同，速度肯定也是不一样的。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,24128,3,&#39;SonicMisora&#39;);">回复</a>]</p>
</div>
</div><div class="comment-childs chalt" id="comment-8689">
<p>
<cite>dmisys</cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/1af0aab7e96765e8adc32fa8534df1d5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 10.0.603.3" style="border:0px;vertical-align:middle;" alt="Google Chrome 10.0.603.3"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-2.png" title="Windows XP" style="border:0px;vertical-align:middle;" alt="Windows XP"><small class="commentmetadata">十二月 26th, 2010 at 10:51:47</small>
</p>
<p>其实无所谓,C++和C的速度差别主要是在对象上的包装上,而文件读取只和读取方式和硬件性能有关,只要硬件够好,像这种一次读取完数据再分析的方式,C++和C是一样的速度。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,8689,2,&#39;dmisys&#39;);">回复</a>]</p><div class="comment-childs" id="comment-8690">
<p>
<cite>dmisys</cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/1af0aab7e96765e8adc32fa8534df1d5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 10.0.603.3" style="border:0px;vertical-align:middle;" alt="Google Chrome 10.0.603.3"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-2.png" title="Windows XP" style="border:0px;vertical-align:middle;" alt="Windows XP"><small class="commentmetadata">十二月 26th, 2010 at 10:53:44</small>
</p>
<p>当然除了汇编之外,C是最快的,主要看你怎么用,像那些要求很有限的电子芯片上现在就是C的天下了</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,8690,3,&#39;dmisys&#39;);">回复</a>]</p>
</div>
</div>
		</li>

	
	
		<li class="" id="comment-3483">
			<cite><a href="http://blog.csdn.net/skyprophet" rel="external nofollow" class="url">skyprophet</a></cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/4b835404d01fcd13aa3e13a1f04add26" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/msie7.png" title="Internet Explorer 8.0" style="border:0px;vertical-align:middle;" alt="Internet Explorer 8.0"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-3483" title="">三月 24th, 2010 at 17:28:32</a> </small>

			<p>那学P的人岂不是很悲剧…………</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,3483,1,&#39;skyprophet&#39;);">回复</a>]</p>
		</li>

	
	
		<li class="alt" id="comment-3596">
			<cite>yangjing</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/2b04ddacd664f1703d348d8bfb4ee276" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 4.1.249.1045" style="border:0px;vertical-align:middle;" alt="Google Chrome 4.1.249.1045"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-3596" title="">四月 3rd, 2010 at 20:32:20</a> </small>

			<p>我学过P，用 P的时候感觉read write的效率基本跟c的一样，参加比赛的时候测试结果也是这样的，不知道 楼主是怎么测试的。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,3596,1,&#39;yangjing&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-3597">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.5.8" style="border:0px;vertical-align:middle;" alt="Firefox 3.5.8"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-1.png" title="Ubuntu 9.10" style="border:0px;vertical-align:middle;" alt="Ubuntu 9.10"><small class="commentmetadata">四月 3rd, 2010 at 20:35:45</small>
</p>
<p>read write和C的scanf printf效率的确是基本一样的，不过只是稍慢一点点。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,3597,2,&#39;BYVoid&#39;);">回复</a>]</p>
</div>
		</li>

	
	
		<li class="" id="comment-4424">
			<cite><a href="http://mydoing.wordpress.com/2010/06/16/free-pascal-%e5%bf%ab%e8%af%bb%e6%96%87%e4%bb%b6/" rel="external nofollow" class="url">Free Pascal 快读文件 « 丘何为是栖栖者</a></cite> Says:
						<br>
	<img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/null.png" title="XML-RPC " style="border:0px;vertical-align:middle;" alt="XML-RPC ">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-4424" title="">六月 16th, 2010 at 13:03:50</a> </small>

			<p>[...] Pascal&nbsp;快读文件 by mydoing on 06/16/2010   参观了这篇博文：探寻C++最快的读取文件的方案 其中从 scanf 函数读取文件不如 Pascal 中的 read [...]</p>

		</li>

	
	
		<li class="alt" id="comment-5777">
			<cite>lh</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/4404309a8e64770fc0bb9222b3fe8969" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/360se.png" title="360Safe Explorer" style="border:0px;vertical-align:middle;" alt="360Safe Explorer"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-2.png" title="Windows XP" style="border:0px;vertical-align:middle;" alt="Windows XP">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-5777" title="">九月 10th, 2010 at 12:45:00</a> </small>

			<p>竞赛中取消cin的同步不会有问题吧</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,5777,1,&#39;lh&#39;);">回复</a>]</p>
		</li>

	
	
		<li class="" id="comment-5820">
			<cite>np</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/0c7d9e8a2534cbb7b0a22f92c42813fe" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/iceweasel.png" title="IceWeasel 3.0.6" style="border:0px;vertical-align:middle;" alt="IceWeasel 3.0.6"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/debian.png" title="Debian GNU/Linux" style="border:0px;vertical-align:middle;" alt="Debian GNU/Linux">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-5820" title="">九月 12th, 2010 at 23:51:04</a> </small>

			<p>scanf用的是%d,fread读出的是字符串,这个转换的时间应当考虑进去</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,5820,1,&#39;np&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-6418">
<p>
<cite>np</cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/0c7d9e8a2534cbb7b0a22f92c42813fe" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/iceweasel.png" title="IceWeasel 3.0.6" style="border:0px;vertical-align:middle;" alt="IceWeasel 3.0.6"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/debian.png" title="Debian GNU/Linux" style="border:0px;vertical-align:middle;" alt="Debian GNU/Linux"><small class="commentmetadata">十月 3rd, 2010 at 18:56:36</small>
</p>
<p>oh，没注意到analyse函数</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,6418,2,&#39;np&#39;);">回复</a>]</p>
</div>
		</li>

	
	
		<li class="alt" id="comment-9709">
			<cite>Lynx</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ba213adfbcb464eb4a7af820a722f184" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.13" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.13"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.10" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.10">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-9709" title="">一月 28th, 2011 at 18:03:41</a> </small>

			<p>“取消同步后效率究竟如何？经测试运行时间锐减到了2.05秒，与scanf效率相差无几了！有了这个以后可以放心使用cin和cout了。”<br>
我不得不说，神牛的这句话是有问题的。<br>
我个人的测试表明，cout一般来说比printf()慢9倍，而加了ios::sync_with_stdio(false)后优化的时间十分少！<br>
您可以自己测测。不过我测时间的方式与您有所不同，我使用Linux bash中的time来测试程序运行时间。<br>
我将输入与输出同时测试，一下是结果：<br>
iostream<br>
real    0m33.775s<br>
user    0m12.013s<br>
sys     0m21.185s<br>
iostream(ios::sync_with_stdio(false))<br>
real    0m31.448s<br>
user    0m8.881s<br>
sys     0m22.313s<br>
cstdio<br>
real    0m3.345s<br>
user    0m3.176s<br>
sys     0m0.108s</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,9709,1,&#39;Lynx&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-9712">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 8.0.552.215" style="border:0px;vertical-align:middle;" alt="Google Chrome 8.0.552.215"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7"><small class="commentmetadata">一月 28th, 2011 at 18:14:09</small>
</p>
<p>你的编译器版本，优化选项是什么？我是用gcc 4.5，-O2</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,9712,2,&#39;BYVoid&#39;);">回复</a>]</p><div class="comment-childs" id="comment-9730">
<p>
<cite>Lynx</cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ba213adfbcb464eb4a7af820a722f184" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.13" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.13"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.10" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.10"><small class="commentmetadata">一月 29th, 2011 at 12:48:48</small>
</p>
<p>今天我再次进行了测试<br>
结果在这里：http://rekonq.appspot.com/?p=143001<br>
情况是，其实cout如果只输出整数是比printf快的，加了ios::sync_with_stdio()就更比printf快了。<br>
但是，后面的测试证明，如果每个数字后面多一个空格/*这在OI中很常见的吧*/，情况会有所不同。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,9730,3,&#39;Lynx&#39;);">回复</a>]</p>
</div>
</div>
		</li>

	
	
		<li class="" id="comment-9719">
			<cite>Lynx</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ba213adfbcb464eb4a7af820a722f184" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 3.6.13" style="border:0px;vertical-align:middle;" alt="Firefox 3.6.13"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/ubuntu-2.png" title="Ubuntu 10.10" style="border:0px;vertical-align:middle;" alt="Ubuntu 10.10">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-9719" title="">一月 29th, 2011 at 00:14:27</a> </small>

			<p>没有使用任何优化选项<br>
文件读入，用的freopen<br>
测试环境：<br>
Linux 内核版本2.6.32-25-generic<br>
g++ 版本：g++ (Ubuntu 4.4.3-4ubuntu5) 4.4.3<br>
CPU：Intel(R) Core(TM)2 Duo CPU P8600 @2.40GHZ<br>
内存：1.9G</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,9719,1,&#39;Lynx&#39;);">回复</a>]</p>
		</li>

	
	
		<li class="alt" id="comment-12586">
			<cite><a href="http://www.shuizilong.com/house" rel="external nofollow" class="url">xiaodao</a></cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/bf4b413c14160b6d35a9be377fdbfe57" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 4.0" style="border:0px;vertical-align:middle;" alt="Firefox 4.0"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/mac-3.png" title="Mac OS X 10.6" style="border:0px;vertical-align:middle;" alt="Mac OS X 10.6">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-12586" title="">四月 3rd, 2011 at 14:03:23</a> </small>

			<p>看来暂时是回到墙内了。。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,12586,1,&#39;xiaodao&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-12587">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 4.0" style="border:0px;vertical-align:middle;" alt="Firefox 4.0"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7"><small class="commentmetadata">四月 3rd, 2011 at 14:09:57</small>
</p>
<p>换IP了</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,12587,2,&#39;BYVoid&#39;);">回复</a>]</p>
</div>
		</li>

	
	
		<li class="" id="comment-13750">
			<cite><a href="http://danc.tk/index.php/archives/9" rel="external nofollow" class="url">C++文件读写速度测试 | Εὕρηκα!</a></cite> Says:
						<br>
	<img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/wordpress.png" title="WordPress 3.1.1" style="border:0px;vertical-align:middle;" alt="WordPress 3.1.1">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-13750" title="">四月 27th, 2011 at 00:21:07</a> </small>

			<p>[...] 曾在BYVoid的blog看到这篇关于C++文件输入的测试报告，关闭了stdio同步的流读写速度很快。从此我在做题时使用这种方式读写。后来在VirtualBox+WInXP里用cena测试时发现这样会引起超时，于是有了下面测实验。 [...]</p>

		</li>

	
	
		<li class="alt" id="comment-17451">
			<cite>暮无井见铃</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/a2841f0e5e1484112055bf423c05df26" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/maxthon.png" title="Maxthon " style="border:0px;vertical-align:middle;" alt="Maxthon "><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-2.png" title="Windows XP" style="border:0px;vertical-align:middle;" alt="Windows XP">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-17451" title="">六月 25th, 2011 at 22:35:17</a> </small>

			<p>Pascal的Read/ReadLn、Write\WriteLn本质上和cin、cout很相似，都是在编译器就决定了读入变量的类型。<br>
而scanf()是在运行期决定的，编译器无法优化。而且还要识别字符串。理论上比cin要慢很多。实际上快的原因是很多编译器对cin、cout的处理过于保守。</p>
<p>不知道博主是否尝试过这个函数：<br>
procedure BlockRead(var f:File;var Buf;count:Int64;var res:Int64);</p>
<p>记得要这样用：<br>
var<br>
  FIN:File;//无类型文件<br>
  A:Array [0..60*1024*1024] of Byte;<br>
  FL:Int64;<br>
begin<br>
  Assign(FIN,’data.txt’);Reset(FIN,1);//此时的Reset有两个参数<br>
  //假假如第二个参数不是1会有问题<br>
  BlockRead(FIL,A,sizeof(A),FL);<br>
end;</p>
<p>Reset()的第二个参数是无类型文件中一个记录块的大小，不写默认是128，会出错。<br>
BlockRead()的最后一个参数作为返回值，意思是读入的记录块的数量（如果记录块大小是1，就是读入的字节数）。</p>
<p>还有个类似的函数是BlockWrite()，有兴趣可以试一下。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,17451,1,&#39;暮无井见铃&#39;);">回复</a>]</p>
		</li>

	
	
		<li class="" id="comment-23810">
			<cite><a href="http://hi.baidu.com/christole/blog/category/%CE%D2%D2%B2%C0%B4%BF%C6%D1%D0/index/1" rel="external nofollow" class="url">不负此舟</a></cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/e35d6543c75685396145c9b7d29a86da" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 13.0.782.112" style="border:0px;vertical-align:middle;" alt="Google Chrome 13.0.782.112"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-2.png" title="Windows XP" style="border:0px;vertical-align:middle;" alt="Windows XP">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-23810" title="">十一月 24th, 2011 at 17:00:33</a> </small>

			<p>很好的工作，转载了。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,23810,1,&#39;不负此舟&#39;);">回复</a>]</p>
		</li>

	
	
		<li class="alt" id="comment-23888">
			<cite>Chen</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/5b629d6a0f6c09a66cbd1d1c56e5666e" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/firefox.png" title="Firefox 8.0" style="border:0px;vertical-align:middle;" alt="Firefox 8.0"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7 x64 Edition" style="border:0px;vertical-align:middle;" alt="Windows 7 x64 Edition">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-23888" title="">十二月 19th, 2011 at 08:42:07</a> </small>

			<p>奇怪一下，FreePascal本质上不就是一个GCC的前端么，何以速度相差如此</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,23888,1,&#39;Chen&#39;);">回复</a>]</p><div class="comment-childs chalt" id="comment-23891">
<p>
<cite><a href="http://www.byvoid.com/" rel="external nofollow" class="url">BYVoid</a></cite>
 回复:<br>
<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/69b6aae3db02702d74fb6c7b8761fbd5" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 16.0.912.63" style="border:0px;vertical-align:middle;" alt="Google Chrome 16.0.912.63"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/mac-3.png" title="Mac OS X 10.7.2" style="border:0px;vertical-align:middle;" alt="Mac OS X 10.7.2"><small class="commentmetadata">十二月 19th, 2011 at 13:30:45</small>
</p>
<p>事实上读文件这种行为主要就是个系统调用，和编译器关系不大，原因主要是标准库的实现问题。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,23891,2,&#39;BYVoid&#39;);">回复</a>]</p>
</div>
		</li>

	
	
		<li class="" id="comment-23983">
			<cite><a href="http://sslang.tk/?p=39" rel="external nofollow" class="url">数声渔笛沧浪 « Free Pascal 快读文件</a></cite> Says:
						<br>
	<img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/wordpress.png" title="WordPress 3.3.1" style="border:0px;vertical-align:middle;" alt="WordPress 3.3.1">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-23983" title="">二月 3rd, 2012 at 13:09:45</a> </small>

			<p>[...] 参观了这篇博文：探寻C++最快的读取文件的方案 其中从 scanf 函数读取文件不如 Pascal 中的 read 说起，介绍了这种直接从内存中读出文件的途径，测试果然表明 C/C++ 可以用特殊办法大大提高读取文件的效率。 [...]</p>

		</li>

	
	
		<li class="alt" id="comment-24084">
			<cite>Kim</cite> Says:
						<br>
	<img alt="" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/5ea81f96acc1f58e89cfbf3e97dba853" class="avatar avatar-32 photo" height="32" width="32"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/chrome.png" title="Google Chrome 17.0.963.56" style="border:0px;vertical-align:middle;" alt="Google Chrome 17.0.963.56"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/win-4.png" title="Windows 7" style="border:0px;vertical-align:middle;" alt="Windows 7">
	<small class="commentmetadata"><a href="http://www.byvoid.com/blog/fast-readfile/zh-hans/#comment-24084" title="">三月 16th, 2012 at 16:39:29</a> </small>

			<p>好文。但是我有个疑惑，博主为何不用库函数atoi()转换，那样可以更快吧。另外，我最近写的程序需要读一些数据，10万行的txt，不算很大，加上排序和输出排序结果，一共跑1s，我用的是vector来装数组，(i/o)fstream来I/O，直接用&lt;&lt;来写结果数组。不知与文中讨论的方法哪个更优？包括安全与速度。我从C初学C++，所以更倾向于用封装好的东西，以防一些比较隐蔽的错误发生。<br>
ps：很好的网站，我第一次来，以后会常来的。<br>
回NOTICE：你好。</p>
<p class="thdrpy">[<a href="javascript:void(0)" onclick="movecfm(event,24084,1,&#39;Kim&#39;);">回复</a>]</p>
		</li>

	
	
	</ol>

 


<h3 id="respond">Leave a Reply</h3>


<form action="http://www.byvoid.com/blog/wp-comments-post.php" method="post" id="commentform">


<p><input type="text" name="author" id="author" value="" size="22" tabindex="1">
<label for="author"><strong>Name</strong> (required)</label></p>

<p><input type="text" name="email" id="email" value="" size="22" tabindex="2">
<label for="email"><strong>Mail</strong> (will not be published) (required)</label></p>

<p><input type="text" name="url" id="url" value="" size="22" tabindex="3">
<label for="url"><strong>Website</strong></label></p>


<p><textarea name="comment" id="comment" cols="100%" rows="10" tabindex="4"></textarea></p>

<p><input name="submit" type="submit" id="submit" tabindex="5" value="Submit Comment">
<input type="hidden" name="comment_post_ID" value="1830">
</p>
<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="1b99f59a7e"></p><input type="hidden" name="variant" value="zh-hans"><p><input type="hidden" id="comment_reply_ID" name="comment_reply_ID" value="0"><input type="hidden" id="comment_reply_dp" name="comment_reply_dp" value="0"></p><div id="cancel_reply" style="display:none;"><a href="javascript:void(0)" onclick="movecfm(null,0,1,null);" style="color:red;">点击取消回复</a></div><script type="text/javascript">
/* <![CDATA[ */
var commentformid = "commentform";
var USERINFO = false;
var atreply = "none";
/* ]]> */
</script>
<script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/wp-thread-comment.js.php"></script>
<script type="text/javascript">
/* <![CDATA[ */
var lstcommentid=24084;
var needauthoremail=true;
var sortflag="ASC";
/* ]]> */
</script>
<script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/wp-thread-comment.js(1).php"></script>

</form><strong>NOTICE:</strong> You should type some Chinese word (like “你好”) in your comment to pass the spam-check, thanks for your patience!



			
	</div><!--/post -->

  </div><!--/content -->

<div id="sidebar">

<ul>



  <li id="text-439470394" class="widget widget_text"><h2 class="sidebartitle">订阅</h2>			<div class="textwidget"><a href="http://www.byvoid.com/blog/feed" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/icon_sub_c1s17.gif" alt="Feed"></a>
<ul>
<li><a href="http://www.byvoid.com/blog/nevigation/">本站导读</a></li>
</ul></div>
		</li><li id="widget_wpcc-3" class="widget widget_wpcc"><h2 class="sidebartitle">阅读习惯</h2>
<div id="wpcc_widget_inner">
	<span id="wpcc_original_link" class="wpcc_lang"><a href="http://www.byvoid.com/blog/fast-readfile/" title="默认">默认</a></span>
	<span id="wpcc_zh-hans_link" class="wpcc_current_lang"><a rel="nofollow" href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/探寻C++最快的读取文件的方案 « Beyond the Void.htm" title="简体">简体</a></span>
	<span id="wpcc_zh-hant_link" class="wpcc_lang"><a rel="nofollow" href="http://www.byvoid.com/blog/fast-readfile/zh-hant/" title="繁体">繁体</a></span>
</div>
</li><li id="pages-3" class="widget widget_pages"><h2 class="sidebartitle">页面</h2>		<ul>
			<li class="page_item page-item-229"><a href="http://www.byvoid.com/blog/original/zh-hans/">精华</a></li>
<li class="page_item page-item-60"><a href="http://www.byvoid.com/blog/contact/zh-hans/">联络</a></li>
<li class="page_item page-item-109"><a href="http://www.byvoid.com/blog/links/zh-hans/">链接</a></li>
<li class="page_item page-item-62"><a href="http://www.byvoid.com/blog/about/zh-hans/">关于</a></li>
		</ul>
		</li><li id="text-439470396" class="widget widget_text"><h2 class="sidebartitle">搜索</h2>			<div class="textwidget"><form action="http://www.google.cn/cse" id="cse-search-box" target="_blank">
  <div>
    <input type="hidden" name="cx" value="partner-pub-7100557222552278:h6n6am-u2fu">
    <input type="hidden" name="ie" value="UTF-8">
    <input type="text" name="q" size="20" style="border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(126, 157, 185); border-right-color: rgb(126, 157, 185); border-bottom-color: rgb(126, 157, 185); border-left-color: rgb(126, 157, 185); padding-top: 2px; padding-right: 2px; padding-bottom: 2px; padding-left: 2px; background-image: url(http://www.google.com/cse/intl/zh-Hans/images/google_custom_search_watermark.gif); background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(255, 255, 255); background-position: 0% 50%; background-repeat: no-repeat no-repeat; ">
    <input type="submit" name="sa" value="搜索">
  </div>
<input name="siteurl" type="hidden" value="www.byvoid.com/blog/fast-readfile/zh-hans/"><input name="ref" type="hidden" value="www.byvoid.com/blog/fast-readfile/"></form>
<script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/brand"></script> </div>
		</li><li id="categories-163760361" class="widget widget_categories"><h2 class="sidebartitle">目录</h2>		<ul>
	<li class="cat-item cat-item-946"><a href="http://www.byvoid.com/blog/cate/chinese-characters/zh-hans/" title="查看 中文与汉语 下的所有文章">中文与汉语</a>
<ul class="children">
	<li class="cat-item cat-item-1276"><a href="http://www.byvoid.com/blog/cate/chinese-characters/region-phrases-comparison/zh-hans/" title="查看 中文词汇地区差异比较 下的所有文章">中文词汇地区差异比较</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-1129"><a href="http://www.byvoid.com/blog/cate/%e5%85%b6%e4%bb%96%e6%88%90%e6%9e%9c/zh-hans/" title="查看 其他成果 下的所有文章">其他成果</a>
</li>
	<li class="cat-item cat-item-947"><a href="http://www.byvoid.com/blog/cate/news-on-the-earth/zh-hans/" title="查看 天下大事 下的所有文章">天下大事</a>
</li>
	<li class="cat-item cat-item-9"><a href="http://www.byvoid.com/blog/cate/life-and-thought/zh-hans/" title="生活与思考">生活点滴</a>
<ul class="children">
	<li class="cat-item cat-item-1103"><a href="http://www.byvoid.com/blog/cate/life-and-thought/%e6%b8%85%e8%8f%af/zh-hans/" title="查看 清华 下的所有文章">清华</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-951"><a href="http://www.byvoid.com/blog/cate/free-debate/zh-hans/" title="查看 稷下学宫 下的所有文章">稷下学宫</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.byvoid.com/blog/cate/competition/zh-hans/" title="信息学奥林匹克">竞赛历程</a>
</li>
	<li class="cat-item cat-item-550"><a href="http://www.byvoid.com/blog/cate/slns/zh-hans/" title="我的题解">竞赛题解</a>
<ul class="children">
	<li class="cat-item cat-item-555"><a href="http://www.byvoid.com/blog/cate/slns/noi-slns/zh-hans/" title="NOI">NOI</a>
</li>
	<li class="cat-item cat-item-556"><a href="http://www.byvoid.com/blog/cate/slns/pku-slns/zh-hans/" title="北京大学OJ">Pku</a>
</li>
	<li class="cat-item cat-item-554"><a href="http://www.byvoid.com/blog/cate/slns/poi-slns/zh-hans/" title="POI">POI</a>
</li>
	<li class="cat-item cat-item-557"><a href="http://www.byvoid.com/blog/cate/slns/ural-slns/zh-hans/" title="Ural大学OJ">Ural</a>
</li>
	<li class="cat-item cat-item-553"><a href="http://www.byvoid.com/blog/cate/slns/usaco-slns/zh-hans/" title="USACO">USACO</a>
</li>
	<li class="cat-item cat-item-558"><a href="http://www.byvoid.com/blog/cate/slns/zju-slns/zh-hans/" title="浙江大学OJ">Zju</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-12"><a href="http://www.byvoid.com/blog/cate/internet-searching/zh-hans/" title="网闻搜捕">精华转载</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.byvoid.com/blog/cate/game-and-entertainment/zh-hans/" title="游戏娱乐">自娱自乐</a>
</li>
	<li class="cat-item cat-item-948"><a href="http://www.byvoid.com/blog/cate/technology/zh-hans/" title="查看 计算机技术 下的所有文章">计算机技术</a>
<ul class="children">
	<li class="cat-item cat-item-1363"><a href="http://www.byvoid.com/blog/cate/technology/javascript-technology/zh-hans/" title="查看 JavaScript 下的所有文章">JavaScript</a>
</li>
	<li class="cat-item cat-item-949"><a href="http://www.byvoid.com/blog/cate/technology/linux-technology/zh-hans/" title="查看 Linux 下的所有文章">Linux</a>
</li>
	<li class="cat-item cat-item-950"><a href="http://www.byvoid.com/blog/cate/technology/php-technology/zh-hans/" title="查看 PHP 下的所有文章">PHP</a>
</li>
	<li class="cat-item cat-item-1231"><a href="http://www.byvoid.com/blog/cate/technology/%e6%95%b8%e6%93%9a%e5%ba%ab/zh-hans/" title="查看 数据库 下的所有文章">数据库</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-10"><a href="http://www.byvoid.com/blog/cate/computing-science/zh-hans/" title="知识爆炸">计算机科学</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://www.byvoid.com/blog/cate/my-design/zh-hans/" title="我的创意">设计开发</a>
</li>
	<li class="cat-item cat-item-952"><a href="http://www.byvoid.com/blog/cate/discovery/zh-hans/" title="查看 点滴发现 下的所有文章">点滴发现</a>
</li>
		</ul>
</li><li id="views-4" class="widget widget_views"><h2 class="sidebartitle">最受欢迎</h2><ul>
<li><a href="http://www.byvoid.com/blog/cpp-string/zh-hans/" title="C++ string 用法详解">C++ string 用法详解</a> - 21,309 </li><li><a href="http://www.byvoid.com/blog/scc-tarjan/zh-hans/" title="有向图强连通分量的Tarjan算法">有向图强连通分量的Tarjan算法</a> - 19,768 </li><li><a href="http://www.byvoid.com/blog/bh-diao-cao/zh-hans/" title="避讳借字——“屌”、“肏”、“屄”">避讳借字——“屌”、“肏”、“屄”</a> - 16,171 </li><li><a href="http://www.byvoid.com/blog/biconnect/zh-hans/" title="图的割点、桥与双连通分支">图的割点、桥与双连通分支</a> - 13,214 </li><li><a href="http://www.byvoid.com/blog/string-hash-compare/zh-hans/" title="各种字符串Hash函数比较">各种字符串Hash函数比较</a> - 11,636 </li><li><a href="http://www.byvoid.com/blog/cpp-fstream/zh-hans/" title="C++中fstream的用法">C++中fstream的用法</a> - 10,383 </li><li><a href="http://www.byvoid.com/blog/hungary/zh-hans/" title="匈牙利算法">匈牙利算法</a> - 8,824 </li><li><a href="./探寻C++最快的读取文件的方案 « Beyond the Void_files/探寻C++最快的读取文件的方案 « Beyond the Void.htm" title="探寻C++最快的读取文件的方案">探寻C++最快的读取文件的方案</a> - 8,255 </li><li><a href="http://www.byvoid.com/blog/gjqt-plot/zh-hans/" title="『古剑奇谭』剧情梗概">『古剑奇谭』剧情梗概</a> - 8,191 </li><li><a href="http://www.byvoid.com/blog/recommend-rime/zh-hans/" title="推荐一个神级输入法——Rime">推荐一个神级输入法——Rime</a> - 7,329 </li><li><a href="http://www.byvoid.com/blog/noip-allsolutions/zh-hans/" title="NOIP2000-2007 全部题解">NOIP2000-2007 全部题解</a> - 6,516 </li><li><a href="http://www.byvoid.com/blog/lpf24-solution/zh-hans/" title="线性规划与网络流24题 解题报告">线性规划与网络流24题 解题报告</a> - 5,470 </li><li><a href="http://www.byvoid.com/blog/match-km/zh-hans/" title="二分图带权匹配 KM算法与费用流模型建立">二分图带权匹配 KM算法与费用流模型建立</a> - 5,455 </li><li><a href="http://www.byvoid.com/blog/c-int64/zh-hans/" title="C/C++的64位整型">C/C++的64位整型</a> - 5,228 </li><li><a href="http://www.byvoid.com/blog/lcs-suffix-array/zh-hans/" title="最长公共子串问题的后缀数组解法">最长公共子串问题的后缀数组解法</a> - 4,715 </li><li><a href="http://www.byvoid.com/blog/noi-2008-employee/zh-hans/" title="NOI 2008 志愿者招募 employee">NOI 2008 志愿者招募 employee</a> - 4,535 </li><li><a href="http://www.byvoid.com/blog/linux-ssh-wall/zh-hans/" title="Linux下实现自动设置SSH代理">Linux下实现自动设置SSH代理</a> - 3,957 </li><li><a href="http://www.byvoid.com/blog/2-sp-mst/zh-hans/" title="次短路径与次小生成树问题的简单解法">次短路径与次小生成树问题的简单解法</a> - 3,944 </li><li><a href="http://www.byvoid.com/blog/pa-origin/zh-hans/" title="注音符号的由来">注音符号的由来</a> - 3,503 </li><li><a href="http://www.byvoid.com/blog/invalid-driver/zh-hans/" title="解决无效驱动器的问题">解决无效驱动器的问题</a> - 3,333 </li><li><a href="http://www.byvoid.com/blog/noi-2009-pvz/zh-hans/" title="NOI 2009 植物大战僵尸">NOI 2009 植物大战僵尸</a> - 3,151 </li><li><a href="http://www.byvoid.com/blog/qq-player-ffmpeg-gpl/zh-hans/" title="抵制践踏GPL的QQ影音">抵制践踏GPL的QQ影音</a> - 3,056 </li><li><a href="http://www.byvoid.com/blog/ubuntu-wine-wow/zh-hans/" title="Ubuntu下用wine玩魔兽世界">Ubuntu下用wine玩魔兽世界</a> - 3,038 </li><li><a href="http://www.byvoid.com/blog/mandarin-altaic/zh-hans/" title="普通话是胡语吗？">普通话是胡语吗？</a> - 2,926 </li><li><a href="http://www.byvoid.com/blog/noi-2009-poet/zh-hans/" title="NOI 2009 诗人小G">NOI 2009 诗人小G</a> - 2,850 </li><li><a href="http://www.byvoid.com/blog/kyonh/zh-hans/" title="广韵查询系统">广韵查询系统</a> - 2,790 </li><li><a href="http://www.byvoid.com/blog/noi-2008-solution/zh-hans/" title="NOI 2008 解题报告">NOI 2008 解题报告</a> - 2,754 </li><li><a href="http://www.byvoid.com/blog/ibus-pinyin-bopomofo-preview/zh-hans/" title="ibus-pinyin注音模式预览">ibus-pinyin注音模式预览</a> - 2,643 </li><li><a href="http://www.byvoid.com/blog/linux-c-1/zh-hans/" title="Linux C语言编程学习笔记 (1)进程控制入门">Linux C语言编程学习笔记 (1)进程控制入门</a> - 2,609 </li><li><a href="http://www.byvoid.com/blog/noi-2009/zh-hans/" title="NOI2009之旅">NOI2009之旅</a> - 2,580 </li></ul>
</li><li id="archives-2" class="widget widget_archive"><h2 class="sidebartitle">存档</h2>		<ul>
			<li><a href="http://www.byvoid.com/blog/2012/04/zh-hans/" title="2012 年四月">2012 年四月</a>&nbsp;(2)</li>
	<li><a href="http://www.byvoid.com/blog/2012/03/zh-hans/" title="2012 年三月">2012 年三月</a>&nbsp;(1)</li>
	<li><a href="http://www.byvoid.com/blog/2012/02/zh-hans/" title="2012 年二月">2012 年二月</a>&nbsp;(2)</li>
	<li><a href="http://www.byvoid.com/blog/2012/01/zh-hans/" title="2012 年一月">2012 年一月</a>&nbsp;(8)</li>
	<li><a href="http://www.byvoid.com/blog/2011/12/zh-hans/" title="2011 年十二月">2011 年十二月</a>&nbsp;(13)</li>
	<li><a href="http://www.byvoid.com/blog/2011/11/zh-hans/" title="2011 年十一月">2011 年十一月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2011/10/zh-hans/" title="2011 年十月">2011 年十月</a>&nbsp;(2)</li>
	<li><a href="http://www.byvoid.com/blog/2011/09/zh-hans/" title="2011 年九月">2011 年九月</a>&nbsp;(1)</li>
	<li><a href="http://www.byvoid.com/blog/2011/08/zh-hans/" title="2011 年八月">2011 年八月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2011/07/zh-hans/" title="2011 年七月">2011 年七月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2011/06/zh-hans/" title="2011 年六月">2011 年六月</a>&nbsp;(6)</li>
	<li><a href="http://www.byvoid.com/blog/2011/05/zh-hans/" title="2011 年五月">2011 年五月</a>&nbsp;(4)</li>
	<li><a href="http://www.byvoid.com/blog/2011/04/zh-hans/" title="2011 年四月">2011 年四月</a>&nbsp;(2)</li>
	<li><a href="http://www.byvoid.com/blog/2011/02/zh-hans/" title="2011 年二月">2011 年二月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2010/12/zh-hans/" title="2010 年十二月">2010 年十二月</a>&nbsp;(4)</li>
	<li><a href="http://www.byvoid.com/blog/2010/11/zh-hans/" title="2010 年十一月">2010 年十一月</a>&nbsp;(2)</li>
	<li><a href="http://www.byvoid.com/blog/2010/10/zh-hans/" title="2010 年十月">2010 年十月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2010/09/zh-hans/" title="2010 年九月">2010 年九月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2010/08/zh-hans/" title="2010 年八月">2010 年八月</a>&nbsp;(7)</li>
	<li><a href="http://www.byvoid.com/blog/2010/06/zh-hans/" title="2010 年六月">2010 年六月</a>&nbsp;(5)</li>
	<li><a href="http://www.byvoid.com/blog/2010/05/zh-hans/" title="2010 年五月">2010 年五月</a>&nbsp;(11)</li>
	<li><a href="http://www.byvoid.com/blog/2010/04/zh-hans/" title="2010 年四月">2010 年四月</a>&nbsp;(10)</li>
	<li><a href="http://www.byvoid.com/blog/2010/03/zh-hans/" title="2010 年三月">2010 年三月</a>&nbsp;(12)</li>
	<li><a href="http://www.byvoid.com/blog/2010/02/zh-hans/" title="2010 年二月">2010 年二月</a>&nbsp;(1)</li>
	<li><a href="http://www.byvoid.com/blog/2010/01/zh-hans/" title="2010 年一月">2010 年一月</a>&nbsp;(10)</li>
	<li><a href="http://www.byvoid.com/blog/2009/12/zh-hans/" title="2009 年十二月">2009 年十二月</a>&nbsp;(5)</li>
	<li><a href="http://www.byvoid.com/blog/2009/11/zh-hans/" title="2009 年十一月">2009 年十一月</a>&nbsp;(11)</li>
	<li><a href="http://www.byvoid.com/blog/2009/10/zh-hans/" title="2009 年十月">2009 年十月</a>&nbsp;(13)</li>
	<li><a href="http://www.byvoid.com/blog/2009/09/zh-hans/" title="2009 年九月">2009 年九月</a>&nbsp;(7)</li>
	<li><a href="http://www.byvoid.com/blog/2009/08/zh-hans/" title="2009 年八月">2009 年八月</a>&nbsp;(2)</li>
	<li><a href="http://www.byvoid.com/blog/2009/07/zh-hans/" title="2009 年七月">2009 年七月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2009/06/zh-hans/" title="2009 年六月">2009 年六月</a>&nbsp;(14)</li>
	<li><a href="http://www.byvoid.com/blog/2009/05/zh-hans/" title="2009 年五月">2009 年五月</a>&nbsp;(16)</li>
	<li><a href="http://www.byvoid.com/blog/2009/04/zh-hans/" title="2009 年四月">2009 年四月</a>&nbsp;(28)</li>
	<li><a href="http://www.byvoid.com/blog/2009/03/zh-hans/" title="2009 年三月">2009 年三月</a>&nbsp;(21)</li>
	<li><a href="http://www.byvoid.com/blog/2009/02/zh-hans/" title="2009 年二月">2009 年二月</a>&nbsp;(18)</li>
	<li><a href="http://www.byvoid.com/blog/2009/01/zh-hans/" title="2009 年一月">2009 年一月</a>&nbsp;(7)</li>
	<li><a href="http://www.byvoid.com/blog/2008/12/zh-hans/" title="2008 年十二月">2008 年十二月</a>&nbsp;(21)</li>
	<li><a href="http://www.byvoid.com/blog/2008/11/zh-hans/" title="2008 年十一月">2008 年十一月</a>&nbsp;(21)</li>
	<li><a href="http://www.byvoid.com/blog/2008/10/zh-hans/" title="2008 年十月">2008 年十月</a>&nbsp;(24)</li>
	<li><a href="http://www.byvoid.com/blog/2008/09/zh-hans/" title="2008 年九月">2008 年九月</a>&nbsp;(6)</li>
	<li><a href="http://www.byvoid.com/blog/2008/08/zh-hans/" title="2008 年八月">2008 年八月</a>&nbsp;(12)</li>
	<li><a href="http://www.byvoid.com/blog/2008/07/zh-hans/" title="2008 年七月">2008 年七月</a>&nbsp;(20)</li>
	<li><a href="http://www.byvoid.com/blog/2008/06/zh-hans/" title="2008 年六月">2008 年六月</a>&nbsp;(23)</li>
	<li><a href="http://www.byvoid.com/blog/2008/04/zh-hans/" title="2008 年四月">2008 年四月</a>&nbsp;(29)</li>
	<li><a href="http://www.byvoid.com/blog/2008/03/zh-hans/" title="2008 年三月">2008 年三月</a>&nbsp;(8)</li>
	<li><a href="http://www.byvoid.com/blog/2008/02/zh-hans/" title="2008 年二月">2008 年二月</a>&nbsp;(1)</li>
	<li><a href="http://www.byvoid.com/blog/2008/01/zh-hans/" title="2008 年一月">2008 年一月</a>&nbsp;(6)</li>
	<li><a href="http://www.byvoid.com/blog/2007/12/zh-hans/" title="2007 年十二月">2007 年十二月</a>&nbsp;(3)</li>
	<li><a href="http://www.byvoid.com/blog/2007/11/zh-hans/" title="2007 年十一月">2007 年十一月</a>&nbsp;(22)</li>
		</ul>
</li><li id="text-439470395" class="widget widget_text">			<div class="textwidget"><script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/saved_resource"></script><div style="&#39;+dou_style+&#39;"><table cellspacing="0" cellpadding="4" style="&#39;+dou_width+&#39;"><tbody><tr align="center"><td style="&#39;+dou_fnt+&#39;"><a href="http://movie.douban.com/subject/1417598/" title="Saw

电锯惊魂 / 夺魂锯" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s2554753.jpg" border="0"></a></td><td style="&#39;+dou_fnt+&#39;"><a href="http://book.douban.com/subject/4934481/" title="Learn You a Haskell for Great Good!

" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s7031229.jpg" border="0"></a></td></tr><tr align="center"><td style="&#39;+dou_fnt+&#39;"><a href="http://book.douban.com/subject/1416571/" title="新著音韵学

" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s2101297.jpg" border="0"></a></td><td style="&#39;+dou_fnt+&#39;"><a href="http://movie.douban.com/subject/1309055/" title="Harry Potter and the Goblet of Fire

哈利·波特与火焰杯 / 哈利·波特4：火杯的考验" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s1456365.jpg" border="0"></a></td></tr><tr align="center"><td style="&#39;+dou_fnt+&#39;"><a href="http://movie.douban.com/subject/1293544/" title="The Silence of the Lambs

沉默的羔羊" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s1317930.jpg" border="0"></a></td><td style="&#39;+dou_fnt+&#39;"><a href="http://music.douban.com/subject/1418301/" title="Odyssey

奇幻旅程" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s4374684.jpg" border="0"></a></td></tr><tr align="center"><td style="&#39;+dou_fnt+&#39;"><a href="http://book.douban.com/subject/3191838/" title="伟大的字母

" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s3234438.jpg" border="0"></a></td><td style="&#39;+dou_fnt+&#39;"><a href="http://movie.douban.com/subject/3148027/" title="New Moon

暮光之城2：新月 / 暮色2：新月" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s3789780.jpg" border="0"></a></td></tr><tr align="center"><td style="&#39;+dou_fnt+&#39;"><a href="http://book.douban.com/subject/6837645/" title="RESTful Web Services Cookbook中文版

RESTful Web Services Cookbook" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s6944557.jpg" border="0"></a></td><td style="&#39;+dou_fnt+&#39;"><a href="http://movie.douban.com/subject/6758119/" title="50 Greatest Harry Potter Moments

哈利·波特系列的50个精彩瞬间 / 哈利·波特系列的50个最伟大瞬间" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s6831417.jpg" border="0"></a></td></tr><tr align="center"><td style="&#39;+dou_fnt+&#39;"><a href="http://movie.douban.com/subject/1864810/" title="红楼梦

A Dream in Red Mansions" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s1798421.jpg" border="0"></a></td><td style="&#39;+dou_fnt+&#39;"><a href="http://book.douban.com/subject/6709783/" title="浪潮之巅

" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/s6584764.jpg" border="0"></a></td></tr><tr><td align="center" colspan="2"><a href="http://www.douban.com/people/byvoid/" target="_blank">我的豆瓣主页</a></td></tr></tbody></table></div></div>
		</li>


 </ul>

</div>

<!--/sidebar -->
  </div>

  <div id="footer">

  <!--recent comments start -->

  <div class="footer-recent-comments">

    
	<h4>Recent Comments</h4>
<ul>
	<li><strong><a href="http://www.byvoid.com/blog/scc-tarjan/zh-hans/#comment-24179" title="on 有向图强连通分量的Tarjan算法">snowing</a></strong>: 您好~我将这个程序用到一个大的网络上，其中节点有近3000，边有6000多，得到了一个结果。然后我将这个网络里面所有的边...</li>
	<li><strong><a href="http://www.byvoid.com/blog/contact/zh-hans/#comment-24178" title="on 联络">Tisu Liu</a></strong>: 想要学习建站。求教。...</li>
	<li><strong><a href="http://www.byvoid.com/blog/why-functional-programming/zh-hans/#comment-24177" title="on 函数式程序设计为什么至关重要">fancl20</a></strong>: Common Lisp 不是函数式语言 也没怎么依赖递归 或者说 Common Lisp 强大的地方和函数式完全没有关系...</li>
	<li><strong><a href="http://www.byvoid.com/blog/scc-tarjan/zh-hans/#comment-24176" title="on 有向图强连通分量的Tarjan算法">yihuikang</a></strong>: 第一次用时不甚理解，多用几遍自然又理解了，谢谢楼主。...</li>
	<li><strong><a href="http://www.byvoid.com/blog/why-functional-programming/zh-hans/#comment-24174" title="on 函数式程序设计为什么至关重要">BYVoid</a></strong>: 大部分递归其实都是尾递归，可以由编译器轻易优化。其他的递归由于无副作用，很多时候可以记忆化。所以效率我觉得还好，至少比P...</li>
</ul>
  </div>

  <!--recent comments end -->

  <!--recent comments start -->

  <div class="footer-recent-posts">

    <h4>标签</h4>
<!-- SWFObject embed by Geoff Stearns geoff@deconcept.com http://blog.deconcept.com/swfobject/ --><script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/swfobject.js"></script><div id="wpcumuluscontent2053881"><embed type="application/x-shockwave-flash" src="http://www.byvoid.com/blog/wp-content/plugins/wp-cumulus/tagcloud.swf?r=435788" width="400" height="300" id="tagcloudflash" name="tagcloudflash" bgcolor="#FFFFFF" quality="high" wmode="transparent" allowscriptaccess="always" flashvars="tcolor=0xFFFFFF&amp;tcolor2=0xFFFFFF&amp;hicolor=0xFFFFFF&amp;tspeed=100&amp;distr=&amp;mode=tags&amp;tagcloud=%3Ctags%3E%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fc%2Fzh-hans%2F%27+class%3D%27tag-link-21%27+title%3D%2716+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+13.133333333333pt%3B%27%3EC%2B%2B%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fcogs%2Fzh-hans%2F%27+class%3D%27tag-link-141%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3ECOGS%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fdesign%2Fzh-hans%2F%27+class%3D%27tag-link-20%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3EDesign%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Ffirefox%2Fzh-hans%2F%27+class%3D%27tag-link-183%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3EFirefox%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fgoogle%2Fzh-hans%2F%27+class%3D%27tag-link-465%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3EGoogle%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fhaoi%2Fzh-hans%2F%27+class%3D%27tag-link-73%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3EHAOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Flinux%2Fzh-hans%2F%27+class%3D%27tag-link-44%27+title%3D%2730+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+17.177777777778pt%3B%27%3ELinux%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fnoi%2Fzh-hans%2F%27+class%3D%27tag-link-46%27+title%3D%2722+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+15.155555555556pt%3B%27%3ENOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fnoi2009%2Fzh-hans%2F%27+class%3D%27tag-link-546%27+title%3D%2713+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.888888888889pt%3B%27%3ENOI2009%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fnoip%2Fzh-hans%2F%27+class%3D%27tag-link-14%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3ENOIP%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Foi%2Fzh-hans%2F%27+class%3D%27tag-link-17%27+title%3D%2714+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.355555555556pt%3B%27%3EOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fphp%2Fzh-hans%2F%27+class%3D%27tag-link-15%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3Ephp%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fpoi%2Fzh-hans%2F%27+class%3D%27tag-link-397%27+title%3D%2734+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+17.955555555556pt%3B%27%3EPOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Ftreap%2Fzh-hans%2F%27+class%3D%27tag-link-244%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3ETreap%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fubuntu%2Fzh-hans%2F%27+class%3D%27tag-link-45%27+title%3D%2715+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.666666666667pt%3B%27%3EUbuntu%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fural%2Fzh-hans%2F%27+class%3D%27tag-link-342%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3EUral%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fusaco%2Fzh-hans%2F%27+class%3D%27tag-link-16%27+title%3D%2762+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+22pt%3B%27%3EUSACO%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fwindows%2Fzh-hans%2F%27+class%3D%27tag-link-35%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3EWindows%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%2586%25ac%25e4%25bb%25a4%25e8%2590%25a5%2Fzh-hans%2F%27+class%3D%27tag-link-48%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E5%86%AC%E4%BB%A4%E8%90%A5%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%258a%25a8%25e6%2580%2581%25e8%25a7%2584%25e5%2588%2592%2Fzh-hans%2F%27+class%3D%27tag-link-86%27+title%3D%2748+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+20.288888888889pt%3B%27%3E%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%258e%259f%25e5%2588%259b%2Fzh-hans%2F%27+class%3D%27tag-link-295%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E5%8E%9F%E5%88%9B%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%258f%2591%25e7%258e%25b0%2Fzh-hans%2F%27+class%3D%27tag-link-30%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3E%E5%8F%91%E7%8E%B0%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%259b%259e%25e5%25bf%2586%2Fzh-hans%2F%27+class%3D%27tag-link-28%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E5%9B%9E%E5%BF%86%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%259b%25be%25e8%25ae%25ba%2Fzh-hans%2F%27+class%3D%27tag-link-143%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E5%9B%BE%E8%AE%BA%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%25ad%2597%25e7%25ac%25a6%25e4%25b8%25b2%2Fzh-hans%2F%27+class%3D%27tag-link-145%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E5%AD%97%E7%AC%A6%E4%B8%B2%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%25bf%2583%25e6%2580%2581%2Fzh-hans%2F%27+class%3D%27tag-link-34%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E5%BF%83%E6%80%81%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%2590%259c%25e7%25b4%25a2%2Fzh-hans%2F%27+class%3D%27tag-link-51%27+title%3D%2718+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+13.911111111111pt%3B%27%3E%E6%90%9C%E7%B4%A2%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%2594%25b9%25e9%259d%25a9%2Fzh-hans%2F%27+class%3D%27tag-link-165%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E6%94%B9%E9%9D%A9%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%2596%2587%25e5%25ad%2597%2Fzh-hans%2F%27+class%3D%27tag-link-740%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E6%96%87%E5%AD%97%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%259c%2580%25e7%259f%25ad%25e8%25b7%25af%25e5%25be%2584%2Fzh-hans%2F%27+class%3D%27tag-link-314%27+title%3D%2714+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.355555555556pt%3B%27%3E%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%25b1%2589%25e5%25ad%2597%2Fzh-hans%2F%27+class%3D%27tag-link-711%27+title%3D%2720+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+14.533333333333pt%3B%27%3E%E6%B1%89%E5%AD%97%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%25b1%2589%25e8%25af%25ad%2Fzh-hans%2F%27+class%3D%27tag-link-710%27+title%3D%2710+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.177777777778pt%3B%27%3E%E6%B1%89%E8%AF%AD%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%258c%258e%25e5%25a5%2587%2Fzh-hans%2F%27+class%3D%27tag-link-31%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3E%E7%8C%8E%E5%A5%87%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%259c%2581%25e9%2580%2589%2Fzh-hans%2F%27+class%3D%27tag-link-74%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3E%E7%9C%81%E9%80%89%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%259c%2581%25e9%2598%259f%25e5%259f%25b9%25e8%25ae%25ad%25e6%2597%25a5%25e5%25bf%2597%2Fzh-hans%2F%27+class%3D%27tag-link-212%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E7%9C%81%E9%98%9F%E5%9F%B9%E8%AE%AD%E6%97%A5%E5%BF%97%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%25b9%2581%25e4%25bd%2593%2Fzh-hans%2F%27+class%3D%27tag-link-737%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E7%B9%81%E4%BD%93%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%25bd%2591%25e7%25bb%259c%25e6%25b5%2581%2Fzh-hans%2F%27+class%3D%27tag-link-128%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E7%BD%91%E7%BB%9C%E6%B5%81%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25a7%25a3%25e9%25a2%2598%25e6%258a%25a5%25e5%2591%258a%2Fzh-hans%2F%27+class%3D%27tag-link-517%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25ae%25a1%25e7%25ae%2597%25e5%2587%25a0%25e4%25bd%2595%2Fzh-hans%2F%27+class%3D%27tag-link-75%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25af%2584%25e8%25ae%25ba%2Fzh-hans%2F%27+class%3D%27tag-link-22%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3E%E8%AF%84%E8%AE%BA%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25af%258d%25e6%25b1%2587%25e6%25af%2594%25e8%25be%2583%2Fzh-hans%2F%27+class%3D%27tag-link-1273%27+title%3D%2717+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+13.6pt%3B%27%3E%E8%AF%8D%E6%B1%87%E6%AF%94%E8%BE%83%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25b5%2584%25e6%2596%2599%2Fzh-hans%2F%27+class%3D%27tag-link-24%27+title%3D%2715+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.666666666667pt%3B%27%3E%E8%B5%84%E6%96%99%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25bd%25ac%25e6%258a%2598%2Fzh-hans%2F%27+class%3D%27tag-link-40%27+title%3D%2715+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.666666666667pt%3B%27%3E%E8%BD%AC%E6%8A%98%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e9%2580%2592%25e5%25bd%2592%2Fzh-hans%2F%27+class%3D%27tag-link-50%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E9%80%92%E5%BD%92%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e9%25ad%2594%25e5%2585%25bd%25e4%25b8%2596%25e7%2595%258c%2Fzh-hans%2F%27+class%3D%27tag-link-726%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3E%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8C%3C%2Fa%3E%3C%2Ftags%3E"></div><script type="text/javascript">var so2313287 = new SWFObject("http://www.byvoid.com/blog/wp-content/plugins/wp-cumulus/tagcloud.swf?r=435788", "tagcloudflash", "400", "300", "9", "#FFFFFF");so2313287.addParam("wmode", "transparent");so2313287.addParam("allowScriptAccess", "always");so2313287.addVariable("tcolor", "0xFFFFFF");so2313287.addVariable("tcolor2", "0xFFFFFF");so2313287.addVariable("hicolor", "0xFFFFFF");so2313287.addVariable("tspeed", "100");so2313287.addVariable("distr", "");so2313287.addVariable("mode", "tags");so2313287.addVariable("tagcloud", "%3Ctags%3E%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fc%2Fzh-hans%2F%27+class%3D%27tag-link-21%27+title%3D%2716+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+13.133333333333pt%3B%27%3EC%2B%2B%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fcogs%2Fzh-hans%2F%27+class%3D%27tag-link-141%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3ECOGS%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fdesign%2Fzh-hans%2F%27+class%3D%27tag-link-20%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3EDesign%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Ffirefox%2Fzh-hans%2F%27+class%3D%27tag-link-183%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3EFirefox%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fgoogle%2Fzh-hans%2F%27+class%3D%27tag-link-465%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3EGoogle%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fhaoi%2Fzh-hans%2F%27+class%3D%27tag-link-73%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3EHAOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Flinux%2Fzh-hans%2F%27+class%3D%27tag-link-44%27+title%3D%2730+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+17.177777777778pt%3B%27%3ELinux%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fnoi%2Fzh-hans%2F%27+class%3D%27tag-link-46%27+title%3D%2722+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+15.155555555556pt%3B%27%3ENOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fnoi2009%2Fzh-hans%2F%27+class%3D%27tag-link-546%27+title%3D%2713+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.888888888889pt%3B%27%3ENOI2009%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fnoip%2Fzh-hans%2F%27+class%3D%27tag-link-14%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3ENOIP%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Foi%2Fzh-hans%2F%27+class%3D%27tag-link-17%27+title%3D%2714+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.355555555556pt%3B%27%3EOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fphp%2Fzh-hans%2F%27+class%3D%27tag-link-15%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3Ephp%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fpoi%2Fzh-hans%2F%27+class%3D%27tag-link-397%27+title%3D%2734+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+17.955555555556pt%3B%27%3EPOI%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Ftreap%2Fzh-hans%2F%27+class%3D%27tag-link-244%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3ETreap%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fubuntu%2Fzh-hans%2F%27+class%3D%27tag-link-45%27+title%3D%2715+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.666666666667pt%3B%27%3EUbuntu%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fural%2Fzh-hans%2F%27+class%3D%27tag-link-342%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3EUral%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fusaco%2Fzh-hans%2F%27+class%3D%27tag-link-16%27+title%3D%2762+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+22pt%3B%27%3EUSACO%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2Fwindows%2Fzh-hans%2F%27+class%3D%27tag-link-35%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3EWindows%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%2586%25ac%25e4%25bb%25a4%25e8%2590%25a5%2Fzh-hans%2F%27+class%3D%27tag-link-48%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E5%86%AC%E4%BB%A4%E8%90%A5%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%258a%25a8%25e6%2580%2581%25e8%25a7%2584%25e5%2588%2592%2Fzh-hans%2F%27+class%3D%27tag-link-86%27+title%3D%2748+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+20.288888888889pt%3B%27%3E%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%258e%259f%25e5%2588%259b%2Fzh-hans%2F%27+class%3D%27tag-link-295%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E5%8E%9F%E5%88%9B%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%258f%2591%25e7%258e%25b0%2Fzh-hans%2F%27+class%3D%27tag-link-30%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3E%E5%8F%91%E7%8E%B0%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%259b%259e%25e5%25bf%2586%2Fzh-hans%2F%27+class%3D%27tag-link-28%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E5%9B%9E%E5%BF%86%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%259b%25be%25e8%25ae%25ba%2Fzh-hans%2F%27+class%3D%27tag-link-143%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E5%9B%BE%E8%AE%BA%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%25ad%2597%25e7%25ac%25a6%25e4%25b8%25b2%2Fzh-hans%2F%27+class%3D%27tag-link-145%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E5%AD%97%E7%AC%A6%E4%B8%B2%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e5%25bf%2583%25e6%2580%2581%2Fzh-hans%2F%27+class%3D%27tag-link-34%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E5%BF%83%E6%80%81%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%2590%259c%25e7%25b4%25a2%2Fzh-hans%2F%27+class%3D%27tag-link-51%27+title%3D%2718+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+13.911111111111pt%3B%27%3E%E6%90%9C%E7%B4%A2%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%2594%25b9%25e9%259d%25a9%2Fzh-hans%2F%27+class%3D%27tag-link-165%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E6%94%B9%E9%9D%A9%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%2596%2587%25e5%25ad%2597%2Fzh-hans%2F%27+class%3D%27tag-link-740%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E6%96%87%E5%AD%97%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%259c%2580%25e7%259f%25ad%25e8%25b7%25af%25e5%25be%2584%2Fzh-hans%2F%27+class%3D%27tag-link-314%27+title%3D%2714+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.355555555556pt%3B%27%3E%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%25b1%2589%25e5%25ad%2597%2Fzh-hans%2F%27+class%3D%27tag-link-711%27+title%3D%2720+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+14.533333333333pt%3B%27%3E%E6%B1%89%E5%AD%97%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e6%25b1%2589%25e8%25af%25ad%2Fzh-hans%2F%27+class%3D%27tag-link-710%27+title%3D%2710+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.177777777778pt%3B%27%3E%E6%B1%89%E8%AF%AD%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%258c%258e%25e5%25a5%2587%2Fzh-hans%2F%27+class%3D%27tag-link-31%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3E%E7%8C%8E%E5%A5%87%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%259c%2581%25e9%2580%2589%2Fzh-hans%2F%27+class%3D%27tag-link-74%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3E%E7%9C%81%E9%80%89%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%259c%2581%25e9%2598%259f%25e5%259f%25b9%25e8%25ae%25ad%25e6%2597%25a5%25e5%25bf%2597%2Fzh-hans%2F%27+class%3D%27tag-link-212%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E7%9C%81%E9%98%9F%E5%9F%B9%E8%AE%AD%E6%97%A5%E5%BF%97%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%25b9%2581%25e4%25bd%2593%2Fzh-hans%2F%27+class%3D%27tag-link-737%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E7%B9%81%E4%BD%93%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e7%25bd%2591%25e7%25bb%259c%25e6%25b5%2581%2Fzh-hans%2F%27+class%3D%27tag-link-128%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E7%BD%91%E7%BB%9C%E6%B5%81%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25a7%25a3%25e9%25a2%2598%25e6%258a%25a5%25e5%2591%258a%2Fzh-hans%2F%27+class%3D%27tag-link-517%27+title%3D%277+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8pt%3B%27%3E%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25ae%25a1%25e7%25ae%2597%25e5%2587%25a0%25e4%25bd%2595%2Fzh-hans%2F%27+class%3D%27tag-link-75%27+title%3D%279+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+9.5555555555556pt%3B%27%3E%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25af%2584%25e8%25ae%25ba%2Fzh-hans%2F%27+class%3D%27tag-link-22%27+title%3D%278+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+8.7777777777778pt%3B%27%3E%E8%AF%84%E8%AE%BA%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25af%258d%25e6%25b1%2587%25e6%25af%2594%25e8%25be%2583%2Fzh-hans%2F%27+class%3D%27tag-link-1273%27+title%3D%2717+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+13.6pt%3B%27%3E%E8%AF%8D%E6%B1%87%E6%AF%94%E8%BE%83%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25b5%2584%25e6%2596%2599%2Fzh-hans%2F%27+class%3D%27tag-link-24%27+title%3D%2715+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.666666666667pt%3B%27%3E%E8%B5%84%E6%96%99%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e8%25bd%25ac%25e6%258a%2598%2Fzh-hans%2F%27+class%3D%27tag-link-40%27+title%3D%2715+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+12.666666666667pt%3B%27%3E%E8%BD%AC%E6%8A%98%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e9%2580%2592%25e5%25bd%2592%2Fzh-hans%2F%27+class%3D%27tag-link-50%27+title%3D%2711+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+10.8pt%3B%27%3E%E9%80%92%E5%BD%92%3C%2Fa%3E%0A%3Ca+href%3D%27http%3A%2F%2Fwww.byvoid.com%2Fblog%2Ftag%2F%25e9%25ad%2594%25e5%2585%25bd%25e4%25b8%2596%25e7%2595%258c%2Fzh-hans%2F%27+class%3D%27tag-link-726%27+title%3D%2712+%E4%B8%AA%E8%AF%9D%E9%A2%98%27+style%3D%27font-size%3A+11.266666666667pt%3B%27%3E%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8C%3C%2Fa%3E%3C%2Ftags%3E");so2313287.write("wpcumuluscontent2053881");</script>  </div>

  <!--recent comments start -->
<!--about text start -->

	<div class="footer-about">

		<h4>关于</h4>
<p>本站系BYVoid个人网站，如需联系站长，请点击<a href="http://www.byvoid.com/blog/contact/">此链接</a>。</p>
<script language="javascript">
	function switch_tongji_code()
	{
		if (document.getElementById("tongji_code").style.display == "none")
			document.getElementById("tongji_code").style.display = "block";
		else
			document.getElementById("tongji_code").style.display = "none";
	}
</script>
<img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/byvico.png" alt="BYVoid" onclick="switch_tongji_code();">

<div id="tongji_code" style="display:none;">
	<script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/tongji.js"></script><script language="javascript" type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/2876281.js"></script><a href="http://www.51.la/?2876281" target="_blank"><img alt="51.la 专业、免费、强健的访问统计" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/icon_2.gif" style="border:none"></a>
<img style="width:0px;height:0px" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/go.asp"><noscript>&lt;a href="http://www.51.la/?2876281" target="_blank"&gt;&lt;img alt="&amp;#x6211;&amp;#x8981;&amp;#x5566;&amp;#x514D;&amp;#x8D39;&amp;#x7EDF;&amp;#x8BA1;" src="http://img.users.51.la/2876281.asp" style="border:none" /&gt;&lt;/a&gt;</noscript><script type="text/javascript" src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/tongji(1).js"></script><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/tongji.do" border="0" width="1" height="1"><a href="http://tongji.linezing.com/report.html?unit_id=1241242" target="_blank"><img src="./探寻C++最快的读取文件的方案 « Beyond the Void_files/icon1.gif" border="0" alt="量子统计"></a><noscript>&lt;a href="http://www.linezing.com"&gt;&lt;img src="http://img.tongji.linezing.com/1241242/tongji.gif"/&gt;&lt;/a&gt;</noscript>
</div>	

	</div>

	<!--about text end -->

	

  <hr class="clear">



  </div><!--/footer -->



</div><!--/page -->



<!--credits start -->

<div id="credits">

<div class="alignright">

<small> 41 queries. 0.706 seconds. </small>

Designed by NattyWP .<br><div align="right">Images by desEXign.</div>

</div>

</div>

  </td>
	<td id="dsa">&nbsp;</td>

</tr>

</tbody></table>

<!--credits end -->

<script type="text/javascript"><!--//--><![CDATA[//><!--
var cf = document.getElementById("commentform");
if(cf){
	var msghtml = "<strong>NOTICE:</strong> You should type some Chinese word (like “你好”) in your comment to pass the spam-check, thanks for your patience!";
	if(cf.insertAdjacentHTML){
		cf.insertAdjacentHTML("afterEnd", msghtml);
	}else{/* FireFox */
		var range = cf.ownerDocument.createRange();
		range.setStartAfter(cf);
		var frag = range.createContextualFragment(msghtml);
		cf.parentNode.insertBefore(frag, cf.nextSibling);
	}
}
//--><!]]></script>


<!-- WP Chinese Conversion Full Page Converted -->
<!-- Dynamic page generated in 0.763 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2012-05-05 11:05:07 -->
</body></html>